/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.sptv.mavenproject2;

import java.math.BigDecimal;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.NoResultException;
import javax.persistence.Persistence;
import javax.persistence.TypedQuery;
import javax.swing.JOptionPane;
import modelo.*;

/**
 *
 * @author Oficina
 */
public class Editcliente extends javax.swing.JFrame {
    
    private Cliente cliente; // Almacena el cliente que se va a editar

    // Constructor que recibe el cliente a editar
    public Editcliente(Cliente cliente) {
        this.cliente = cliente;
        initComponents(); // Inicializa la interfaz de usuario
        loadData(); // Carga los datos del cliente en los campos
    }

    // Constructor vacío por defecto
    public Editcliente() {
        initComponents();
    }

    // Método para cargar los datos del cliente en los campos correspondientes
private void loadData() {
        
    //carga los datos del cliente
    rptnombre.setText(cliente.getNombre());
    rptruc.setText(cliente.getRuc());
    rptruc.setEditable(false); // Hacer el RUC no editable
    rptcorreo.setText(cliente.getCorreo());
    rpttelefono.setText(cliente.getTelefono());
    rptfechadeactividades.setText(cliente.getFechainicioact().toString());
    rptfechadeactividades.setEditable(false); // Hacer la fecha no editable
    rptprimeradec.setText(cliente.getPrimeradec().toString());
    rptprimeradec.setEditable(false); // Hacer la fecha no editable
    rpthonorarios.setText(cliente.getHonorarios().toString());
    rptregimen.setText(cliente.getRegimen());

    EntityManagerFactory emf = Persistence.createEntityManagerFactory("persisventas");
    EntityManager em = emf.createEntityManager();
    
    try {
        // Buscar el libro del cliente por RUC
        TypedQuery<Libro> queryLibro = em.createQuery(
            "SELECT l FROM Libro l WHERE l.cliente.ruc = :ruc", Libro.class
        );
        queryLibro.setParameter("ruc", cliente.getRuc());
        Libro libro = queryLibro.getSingleResult();

        // Buscar la cobranza del cliente por RUC
        TypedQuery<Cobranza> queryCobranza = em.createQuery(
            "SELECT co FROM Cobranza co WHERE co.cliente.ruc = :ruc", Cobranza.class
        );
        queryCobranza.setParameter("ruc", cliente.getRuc());
        Cobranza cobranza = queryCobranza.getSingleResult();

        // Buscar la ClaveSol del cliente por RUC
        TypedQuery<Clavesol> queryClavesol = em.createQuery(
            "SELECT cl FROM Clavesol cl WHERE cl.cliente.ruc = :ruc", Clavesol.class
        );
        queryClavesol.setParameter("ruc", cliente.getRuc());
        Clavesol clavesol = queryClavesol.getSingleResult();

        // Cargar los datos de libro en los checkboxes
        rptregistroventas.setSelected(libro.getRegistrodeventas().equals(Libro.Estado.ACTIVO));
        rptdiariocompras.setSelected(libro.getDiariodeformatosimplificado().equals(Libro.Estado.ACTIVO));

        // Cargar los datos de cobranza en los checkboxes
        totalrpt.setSelected(cobranza.getEstadototal());
        mensualrpt.setSelected(cobranza.getEstadomensual());
        anualrpt.setSelected(cobranza.getEstadoanual());
        
        // Cargar el usuario de ClaveSol en el campo lblUsuarioclave
        rptusuarioclavesol.setText(clavesol.getUsuario()); // Mostrar el usuario de ClaveSol
        
    } catch (NoResultException e) {
        JOptionPane.showMessageDialog(this, "No se encontraron registros asociados al cliente.", "Error", JOptionPane.ERROR_MESSAGE);
    } finally {
        em.close();
        emf.close();
    }
}
private boolean validarCampos() {
    if (rptnombre.getText().trim().isEmpty() || 
        rptcorreo.getText().trim().isEmpty() || 
        rpttelefono.getText().trim().isEmpty() || 
        rpthonorarios.getText().trim().isEmpty() || 
        rptregimen.getText().trim().isEmpty() || 
        rptusuarioclavesol.getText().trim().isEmpty()) {
        
        JOptionPane.showMessageDialog(this, "Todos los campos de texto deben estar completos.", "Error", JOptionPane.WARNING_MESSAGE);
        return false;
    }
    return true;
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnVolveraCasa = new javax.swing.JButton();
        rptnombre = new javax.swing.JTextField();
        rptruc = new javax.swing.JTextField();
        rptregimen = new javax.swing.JTextField();
        rptfechadeactividades = new javax.swing.JTextField();
        lblTitulo = new javax.swing.JLabel();
        rptprimeradec = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        lblRuc = new javax.swing.JLabel();
        lblRegimen = new javax.swing.JLabel();
        lblFechadeactividades = new javax.swing.JLabel();
        lblPeriododeprimeradec = new javax.swing.JLabel();
        lblHonorarios = new javax.swing.JLabel();
        lblCorreo = new javax.swing.JLabel();
        rpthonorarios = new javax.swing.JTextField();
        rptcorreo = new javax.swing.JTextField();
        lblTelefono = new javax.swing.JLabel();
        rpttelefono = new javax.swing.JTextField();
        lblSubTituloClavesol = new javax.swing.JLabel();
        rptusuarioclavesol = new javax.swing.JTextField();
        lblUsuarioclave = new javax.swing.JLabel();
        lblSubTituloLibros = new javax.swing.JLabel();
        btneditar = new javax.swing.JButton();
        lblRegistrodeventas = new javax.swing.JLabel();
        lblregistrodecompras = new javax.swing.JLabel();
        lblDiariodecomprassimplificado = new javax.swing.JLabel();
        rptregistroventas = new javax.swing.JCheckBox();
        checboxregistrodeventasrpt = new javax.swing.JCheckBox();
        rptdiariocompras = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        mensualrpt = new javax.swing.JCheckBox();
        anualrpt = new javax.swing.JCheckBox();
        totalrpt = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 255, 204));

        btnVolveraCasa.setBackground(new java.awt.Color(153, 255, 153));
        btnVolveraCasa.setText("Volver a la pestaña pricipal");
        btnVolveraCasa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolveraCasaActionPerformed(evt);
            }
        });

        rptnombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rptnombreActionPerformed(evt);
            }
        });

        rptruc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rptrucActionPerformed(evt);
            }
        });

        rptregimen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rptregimenActionPerformed(evt);
            }
        });

        rptfechadeactividades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rptfechadeactividadesActionPerformed(evt);
            }
        });

        lblTitulo.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblTitulo.setText("CONSULTORIA EMPRESARIAL SERVISERC S.A.C");

        rptprimeradec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rptprimeradecActionPerformed(evt);
            }
        });

        lblNombre.setBackground(new java.awt.Color(0, 0, 0));
        lblNombre.setText("Nombre: ");

        lblRuc.setText("RUC: ");

        lblRegimen.setText("Regimen");

        lblFechadeactividades.setText("Fecha de actividades:");

        lblPeriododeprimeradec.setText("Periodo de servicio de Primera declaracion:");

        lblHonorarios.setText("Honorarios");

        lblCorreo.setText("Correo electronico");

        rpthonorarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rpthonorariosActionPerformed(evt);
            }
        });

        rptcorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rptcorreoActionPerformed(evt);
            }
        });

        lblTelefono.setText("Telefono de contacto:");

        rpttelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rpttelefonoActionPerformed(evt);
            }
        });

        lblSubTituloClavesol.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        lblSubTituloClavesol.setText("CLAVE SOL");

        rptusuarioclavesol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rptusuarioclavesolActionPerformed(evt);
            }
        });

        lblUsuarioclave.setText("Usuario:");

        lblSubTituloLibros.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        lblSubTituloLibros.setText("LIBROS");

        btneditar.setBackground(new java.awt.Color(51, 255, 51));
        btneditar.setText("editar");
        btneditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditarActionPerformed(evt);
            }
        });

        lblRegistrodeventas.setText("Registro de ventas:");

        lblregistrodecompras.setText("Registro de compras:");

        lblDiariodecomprassimplificado.setText("Diario de compras simplificado:");

        rptregistroventas.setText("si");
        rptregistroventas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rptregistroventasActionPerformed(evt);
            }
        });

        checboxregistrodeventasrpt.setText("si");
        checboxregistrodeventasrpt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checboxregistrodeventasrptActionPerformed(evt);
            }
        });

        rptdiariocompras.setText("si");
        rptdiariocompras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rptdiariocomprasActionPerformed(evt);
            }
        });

        jLabel4.setText("total:");

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel1.setText("Estado");

        mensualrpt.setText("al dia");
        mensualrpt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mensualrptActionPerformed(evt);
            }
        });

        anualrpt.setText("al dia");
        anualrpt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anualrptActionPerformed(evt);
            }
        });

        totalrpt.setText("al dia");
        totalrpt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalrptActionPerformed(evt);
            }
        });

        jLabel3.setText("anual:");

        jLabel2.setText("Mensual:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNombre)
                            .addComponent(lblRuc, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblRegimen)
                            .addComponent(lblFechadeactividades)
                            .addComponent(lblPeriododeprimeradec)
                            .addComponent(lblHonorarios)
                            .addComponent(lblCorreo))
                        .addGap(59, 59, 59)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rptfechadeactividades, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rptregimen, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rptruc, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rptnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rptcorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rpttelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rptusuarioclavesol, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rptprimeradec, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rpthonorarios, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(51, 51, 51)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(24, 24, 24)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(anualrpt)
                                    .addComponent(mensualrpt)
                                    .addComponent(totalrpt))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTelefono)
                                    .addComponent(lblRegistrodeventas)
                                    .addComponent(lblDiariodecomprassimplificado)
                                    .addComponent(lblregistrodecompras))
                                .addGap(120, 120, 120)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checboxregistrodeventasrpt)
                                    .addComponent(rptregistroventas)
                                    .addComponent(rptdiariocompras))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btneditar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnVolveraCasa, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addComponent(lblSubTituloClavesol)
                            .addComponent(lblUsuarioclave)
                            .addComponent(lblSubTituloLibros))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(lblTitulo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(lblTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(rptnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRuc, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rptruc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRegimen)
                    .addComponent(rptregimen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblFechadeactividades)
                    .addComponent(rptfechadeactividades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(anualrpt)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(mensualrpt)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(totalrpt)
                                    .addComponent(jLabel4)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPeriododeprimeradec)
                            .addComponent(rptprimeradec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHonorarios)
                            .addComponent(rpthonorarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(lblCorreo))
                            .addComponent(rptcorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rpttelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(lblTelefono)))
                        .addGap(1, 1, 1)
                        .addComponent(lblSubTituloClavesol)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsuarioclave, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rptusuarioclavesol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSubTituloLibros)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRegistrodeventas)
                            .addComponent(checboxregistrodeventasrpt))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblregistrodecompras)
                            .addComponent(rptregistroventas))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDiariodecomprassimplificado)
                            .addComponent(rptdiariocompras))
                        .addGap(53, 53, 53))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btneditar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnVolveraCasa)
                        .addGap(55, 55, 55))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolveraCasaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolveraCasaActionPerformed
        this.dispose();

        // Abrir la nueva ventana (PestañaPrincipal)
        PestañaPrincipal nuevaVentana = new PestañaPrincipal();
        nuevaVentana.setVisible(true);
    }//GEN-LAST:event_btnVolveraCasaActionPerformed

    private void rptnombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rptnombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rptnombreActionPerformed

    private void rptrucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rptrucActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rptrucActionPerformed

    private void rptregimenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rptregimenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rptregimenActionPerformed

    private void rptfechadeactividadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rptfechadeactividadesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rptfechadeactividadesActionPerformed

    private void rptprimeradecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rptprimeradecActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rptprimeradecActionPerformed

    private void rpthonorariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rpthonorariosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rpthonorariosActionPerformed

    private void rptcorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rptcorreoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rptcorreoActionPerformed

    private void rpttelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rpttelefonoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rpttelefonoActionPerformed

    private void rptusuarioclavesolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rptusuarioclavesolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rptusuarioclavesolActionPerformed

    private void btneditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditarActionPerformed
    // Validar que no haya campos vacíos antes de proceder a guardar los datos
    
        // Aquí va la lógica para guardar los cambios, ya que los campos son válidos
    EntityManagerFactory emf = Persistence.createEntityManagerFactory("persisventas");
    EntityManager em = emf.createEntityManager();
    
    try {
        em.getTransaction().begin();
        
        // Obtener el RUC del cliente actual
        String rucCliente = cliente.getRuc();  // Asegúrate de que este es un String

        // Usar una consulta para encontrar al cliente por RUC
        TypedQuery<Cliente> queryCliente = em.createQuery(
            "SELECT c FROM Cliente c WHERE c.ruc = :ruc", Cliente.class
        );
        queryCliente.setParameter("ruc", rucCliente);
        Cliente clienteExistente = queryCliente.getSingleResult();
        
        if (clienteExistente == null) {
            JOptionPane.showMessageDialog(this, "No se encontró el cliente.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Actualizar los datos del cliente
        clienteExistente.setNombre(rptnombre.getText());
        clienteExistente.setCorreo(rptcorreo.getText());
        clienteExistente.setTelefono(rpttelefono.getText());
        clienteExistente.setRegimen(rptregimen.getText());
        BigDecimal honorarios = new BigDecimal(rpthonorarios.getText());
        clienteExistente.setHonorarios(honorarios);
        clienteExistente.setFechainicioact(java.sql.Date.valueOf(rptfechadeactividades.getText()));
        clienteExistente.setPrimeradec(java.sql.Date.valueOf(rptprimeradec.getText()));
        
        // Actualizar los datos en la entidad Libro
        TypedQuery<Libro> queryLibro = em.createQuery(
            "SELECT l FROM Libro l WHERE l.cliente.ruc = :ruc", Libro.class
        );
        queryLibro.setParameter("ruc", rucCliente);
        Libro libro = queryLibro.getSingleResult();
        libro.setRegistrodeventas(rptregistroventas.isSelected() ? Libro.Estado.ACTIVO : Libro.Estado.INACTIVO);
        libro.setDiariodeformatosimplificado(rptdiariocompras.isSelected() ? Libro.Estado.ACTIVO : Libro.Estado.INACTIVO);
        
        // Actualizar los datos en la entidad Cobranza
        TypedQuery<Cobranza> queryCobranza = em.createQuery(
            "SELECT co FROM Cobranza co WHERE co.cliente.ruc = :ruc", Cobranza.class
        );
        queryCobranza.setParameter("ruc", rucCliente);
        Cobranza cobranza = queryCobranza.getSingleResult();
        cobranza.setEstadomensual(mensualrpt.isSelected());
        cobranza.setEstadoanual(anualrpt.isSelected());
        cobranza.setEstadototal(totalrpt.isSelected());
        
        // Actualizar los datos en la entidad Clavesol
        TypedQuery<Clavesol> queryClavesol = em.createQuery(
            "SELECT cl FROM Clavesol cl WHERE cl.cliente.ruc = :ruc", Clavesol.class
        );
        queryClavesol.setParameter("ruc", rucCliente);
        Clavesol clavesol = queryClavesol.getSingleResult();
        clavesol.setUsuario(rptusuarioclavesol.getText());
        
        // Guardar los cambios
        em.getTransaction().commit();
        
        // Mensaje de éxito
        JOptionPane.showMessageDialog(this, "Datos actualizados con éxito.", "Confirmación", JOptionPane.INFORMATION_MESSAGE);
        
    } catch (NoResultException e) {
        em.getTransaction().rollback();
        JOptionPane.showMessageDialog(this, "No se encontraron registros asociados al cliente.", "Error", JOptionPane.ERROR_MESSAGE);
    } catch (Exception e) {
        em.getTransaction().rollback();
        e.printStackTrace(); // Para depuración
        JOptionPane.showMessageDialog(this, "Ocurrió un error al actualizar los datos.", "Error", JOptionPane.ERROR_MESSAGE);
    } finally {
        em.close();
        emf.close();
    }
    }//GEN-LAST:event_btneditarActionPerformed

    private void checboxregistrodeventasrptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checboxregistrodeventasrptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checboxregistrodeventasrptActionPerformed

    private void rptregistroventasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rptregistroventasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rptregistroventasActionPerformed

    private void rptdiariocomprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rptdiariocomprasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rptdiariocomprasActionPerformed

    private void mensualrptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mensualrptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mensualrptActionPerformed

    private void anualrptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anualrptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_anualrptActionPerformed

    private void totalrptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalrptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalrptActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editcliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editcliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editcliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editcliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editcliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox anualrpt;
    private javax.swing.JButton btnVolveraCasa;
    private javax.swing.JButton btneditar;
    private javax.swing.JCheckBox checboxregistrodeventasrpt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCorreo;
    private javax.swing.JLabel lblDiariodecomprassimplificado;
    private javax.swing.JLabel lblFechadeactividades;
    private javax.swing.JLabel lblHonorarios;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPeriododeprimeradec;
    private javax.swing.JLabel lblRegimen;
    private javax.swing.JLabel lblRegistrodeventas;
    private javax.swing.JLabel lblRuc;
    private javax.swing.JLabel lblSubTituloClavesol;
    private javax.swing.JLabel lblSubTituloLibros;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblUsuarioclave;
    private javax.swing.JLabel lblregistrodecompras;
    private javax.swing.JCheckBox mensualrpt;
    private javax.swing.JTextField rptcorreo;
    private javax.swing.JCheckBox rptdiariocompras;
    private javax.swing.JTextField rptfechadeactividades;
    private javax.swing.JTextField rpthonorarios;
    private javax.swing.JTextField rptnombre;
    private javax.swing.JTextField rptprimeradec;
    private javax.swing.JTextField rptregimen;
    private javax.swing.JCheckBox rptregistroventas;
    private javax.swing.JTextField rptruc;
    private javax.swing.JTextField rpttelefono;
    private javax.swing.JTextField rptusuarioclavesol;
    private javax.swing.JCheckBox totalrpt;
    // End of variables declaration//GEN-END:variables

}
